name: Prepare WordPress for PHPUnit testing

inputs:
  php:
    description: PHP version
    required: true
    default: '7.4'
  memcached:
    required: true
    default: false
  phpunit-version:
    description: PHPUnit version
    required: false

runs:
  using: "composite"
  steps:
    - name: Configure environment variables
      run: |
        echo "PHP_FPM_UID=$(id -u)" >> $GITHUB_ENV
        echo "PHP_FPM_GID=$(id -g)" >> $GITHUB_ENV
        echo "LOCAL_PHP=${{ inputs.php }}-fpm" >> $GITHUB_ENV
        echo "LOCAL_PHPUNIT=${{ inputs.phpunit && inputs.phpunit || inputs.php }}-fpm" >> $GITHUB_ENV
        echo "LOCAL_PHP_MEMCACHED=${{ inputs.memcached }}" >> $GITHUB_ENV

    - name: Checkout repository
      uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4

    - name: Install NodeJS
      uses: actions/setup-node@38d90ce44d5275ad62cc48384b3d8a58c500bb5f # v2.2.2
      with:
        node-version: 14
        cache: npm

    - name: Install Dependencies
      run: npm ci

    # This date is used to ensure that the Composer cache is refreshed at least once every week.
    # http://man7.org/linux/man-pages/man1/date.1.html
    - name: "Get last Monday's date"
      id: get-date
      run: echo "::set-output name=date::$(/bin/date -u --date='last Mon' "+%F")"
      shell: bash

    - name: Get Composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache Composer dependencies
      uses: actions/cache@26968a09c0ea4f3e233fdddbafd1166051a095f6 # v2.1.4
      env:
        cache-name: cache-composer-dependencies
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-php-${{ matrix.php }}-date-${{ steps.get-date.outputs.date }}-composer-${{ hashFiles('**/composer.json') }}

    - name: Install Composer dependencies
      env:
        - LOCAL_PHP:  ${{ inputs.php }}-fpm
      run: |
        docker-compose run --rm php composer --version

        # Install using `composer update` as there is no `composer.lock` file.
        if [ ${{ env.LOCAL_PHP }} == '8.1-fpm' ]; then
          docker-compose run --rm php composer update --ignore-platform-reqs
        else
          docker-compose run --rm php composer update
        fi

    - name: Docker debug information
      run: |
        docker -v
        docker-compose -v

    - name: Start Docker environment
      run: |
        npm run env:start

    # The memcached server needs to start after the Docker network has been set up with `npm run env:start`.
    - name: Start the Memcached server.
      if: ${{ matrix.memcached }}
      run: |
        cp tests/phpunit/includes/object-cache.php src/wp-content/object-cache.php
        docker run --name memcached --net $(basename "$PWD")_wpdevnet -d memcached

    - name: General debug information
      run: |
        npm --version
        node --version
        curl --version
        git --version
        svn --version

    - name: Log running Docker containers
      run: docker ps -a

    - name: WordPress Docker container debug information
      run: |
        docker-compose run --rm mysql mysql --version
        docker-compose run --rm php php --version
        docker-compose run --rm php php -m
        docker-compose run --rm php php -i
        docker-compose run --rm php locale -a

    - name: Install WordPress
      run: npm run env:install
